<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <LangVersion>latest</LangVersion>
    <TargetFrameworks>netstandard2.0;net461</TargetFrameworks>
    <RootNamespace>V8.Net</RootNamespace>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <AssemblyName>V8.Net</AssemblyName>
    <DefineConstants>NETSTANDARD</DefineConstants>
    <NoWarn>1701,1702,1591</NoWarn>
    <Authors>James Wilkins</Authors>
    <Company>Inossis.com</Company>
    <Description>V8.Net is a wrapper for Google's V8 engine for JavaScript.
Supports .Net Standard 2.0+ and .Net 461+.  A project in the repo also supports .Net 4.0+ Full if needed.</Description>
    <Copyright>Inossis</Copyright>
    <PackageLicenseUrl>https://github.com/rjamesnw/v8dotnet</PackageLicenseUrl>
    <PackageProjectUrl>https://github.com/rjamesnw/v8dotnet</PackageProjectUrl>
    <ApplicationIcon />
    <OutputType>Library</OutputType>
    <StartupObject />
    <PackageIconUrl>https://v8.dev/_img/v8-outline.svg</PackageIconUrl>
    <RepositoryUrl>https://github.com/rjamesnw/v8dotnet</RepositoryUrl>
    <RepositoryType>GitHub</RepositoryType>
    <PackageTags>V8.NET, V8, JavaScript, ClearScript, JScript, Chromium</PackageTags>
    <PackageReleaseNotes>Bugs fixed:
1. Dynamic case from dynamic handle to managed object type.
2. Switching contexts fails due to locked global handle (because global objects cannot be disposed, as they are part of the context itself).  Instead the global handle in the engine is replaced instead of being 'set' (which is what caused the system to try to dispose it).</PackageReleaseNotes>
    <Version>1.1.9</Version>
    <Product>V8.Net</Product>
    <PackageId>V8.Net</PackageId>
    <PackageRequireLicenseAcceptance>False</PackageRequireLicenseAcceptance>
    <AssemblyVersion>1.1.9.0</AssemblyVersion>
    <FileVersion>1.1.9.0</FileVersion>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)' == 'netstandard2.0'">
    <DefineConstants>$(DefineConstants);NETCORE;NETSTANDARD2_0</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)' == 'net461'">
    <DefineConstants>$(DefineConstants);NETFULL;NET461</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <GenerateSerializationAssemblies>Off</GenerateSerializationAssemblies>
    <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <GenerateSerializationAssemblies>Off</GenerateSerializationAssemblies>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|netstandard2.0|AnyCPU'">
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Debug|netstandard2.0|AnyCPU'">
  </PropertyGroup>

  <ItemGroup>
    <Compile Remove="obj\**" />
    <Compile Remove="Utilities\**" />
    <EmbeddedResource Remove="obj\**" />
    <EmbeddedResource Remove="Utilities\**" />
    <None Remove="obj\**" />
    <None Remove="Utilities\**" />
  </ItemGroup>

  <ItemGroup>
    <Compile Remove="Handles~.cs" />
    <Compile Remove="Properties\AssemblyInfo.cs" />
    <Compile Remove="V8Engine_Handles~.cs" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="Proxy\GeneratedExterns\Generate32BitExterns.tt~" />
    <None Remove="VersionUpdater.dll" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="runtimes\win10-x64\native\" />
    <Folder Include="runtimes\win10-x86\native\" />
  </ItemGroup>

  <ItemGroup Condition="'$(Platform)'=='AnyCPU'">
    <!--Content Include="..\bin\netstandard\$(Configuration)\*V8_Net_Proxy_*">
      <Link>runtimes\win10-x64\native\%(Filename)%(Extension)</Link-->
      <!--<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>-->
    <!--/Content-->
  </ItemGroup>

  <!--ItemGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <Content Include="..\bin\netstandard\Release\*V8_Net_Proxy_*">
      <Link>runtimes\win10-x64\native\%(Filename)%(Extension)</Link>
    </Content>
  </ItemGroup-->

  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.Hosting.Abstractions" Version="2.2.0" />
    <PackageReference Include="System.Runtime.InteropServices.RuntimeInformation" Version="4.3.0" />
  </ItemGroup>

  <ItemGroup>
    <None Update="Proxy\GeneratedExterns\Generate32BitExterns.log">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Generate32BitExterns.tt</DependentUpon>
    </None>
    <None Update="Proxy\GeneratedExterns\Generate32BitExterns.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>Generate32BitExterns.log</LastGenOutput>
    </None>
    <None Update="Proxy\GeneratedExterns\Generate32BitExterns1.log">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>Generate32BitExterns1.cs</LastGenOutput>
    </None>
  </ItemGroup>

  <ItemGroup>
    <Service Include="{508349b6-6b84-4df5-91f0-309beebad82d}" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="Proxy\GeneratedExterns\Generate32BitExterns.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Generate32BitExterns.tt~</DependentUpon>
    </Compile>
    <Compile Update="Proxy\GeneratedExterns\Generate32BitExterns1.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Generate32BitExterns1.log</DependentUpon>
    </Compile>
  </ItemGroup>

  <Target Name="CopyNativeFiles" AfterTargets="AfterBuild">
    <ItemGroup>
      <NativeFiles Include="..\bin\netstandard\$(Configuration)\*V8_Net_Proxy_*" />
    </ItemGroup>
    <Message Text="Copying native files ..." Importance="High" />
    <Copy SourceFiles="@(NativeFiles)" DestinationFolder="$(TargetDir)" SkipUnchangedFiles="true" />
    <Message Text="Done copying native files." Importance="High" />
  </Target>
  
  <Target Name="CopyNativeFilesOnPublish" AfterTargets="Publish">
    <ItemGroup>
      <NativeFiles Include="..\bin\netstandard\$(Configuration)\*V8_Net_Proxy_*" />
    </ItemGroup>
    <Message Text="Copying native files for publish ..." Importance="High" />
    <Copy SourceFiles="@(NativeFiles)" DestinationFolder="$(TargetDir)" SkipUnchangedFiles="true" />
    <Message Text="Done copying native files for publish." Importance="High" />
  </Target>

  <!--Target Name="PushPackageToLocal" AfterTargets="Pack">
    <Exec Command="dotnet nuget push &quot;$(MSBuildProjectDirectory)\..\bin\netstandard\$(Configuration)\$(AssemblyName).$(Version).nupkg&quot; -s &quot;C:\Data\Visual Studio\Nuget Server\$(Configuration)&quot;" />
  </Target-->

  <!--<Target Name="CopyNativeFiles" DependsOnTargets="CopyFilesToOutputDirectory">
    <Message Text="Should run before build" Importance="High" />
    <Copy
        SourceFiles="@(NativeFiles)"
        DestinationFiles="@(ExtraContent->'$(TargetDir)\%(RecursiveDir)%(Filename)%(Extension)')"
        SkipUnchangedFiles="true" />
  </Target>-->
  
</Project>
